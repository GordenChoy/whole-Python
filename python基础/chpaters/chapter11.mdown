# 与Mysql数据库
>author: 波比小金刚

<br/>

千里之行，始于足下。
几乎所有的编程语言都是始于数据存储、运算、逻辑...
so, 开始我们的python旅程。
本章节代码都在./code/chapter11.py
<a href="#">图片没加载出来，请直接下载并打开对应的html页面</a>

## 简介

数据库产品太多，SQL类的，NOSQL类的，我们都应该去了解并掌握常用的。这里以Mysql这个免费开源的数据库抛砖引玉，更多别的库的使用可以参见后边你的实际项目开发。

## 驱动安装

Mysql官方提供了 <a href='https://github.com/mysql/mysql-connector-python'>mysql-connector-python </a>驱动用来操作Mysql数据库。<br/>
除此之外还有类似 <a href='https://github.com/PyMySQL/PyMySQL'>PyMysql</a>

ok,<br/>

我们开始，首先Mysql的安装过程自行百度，我安装的是较新的5.7.16版本的。

### PyMysql

>PyMySQL 是在 Python3.x 版本中用于连接 MySQL 服务器的一个库，Python2中则使用mysqldb。
PyMySQL 遵循 Python 数据库 API v2.0 规范，并包含了 pure-Python MySQL 客户端库。

#### 安装

```
$ pip3 install PyMySQL
```

或者

```
$ git clone https://github.com/PyMySQL/PyMySQL
$ cd PyMySQL/
$ python3 setup.py install
```

现在先在数据库中新增一个用户，授权并创建一个pytest的数据库，建一个user表，有job,name,idcard字段。

```
参考: http://blog.csdn.net/u013216667/article/details/70158452
```

我们实现基本的增删改查操作。

```
# 链接数据库
# 参数分别是本地IP，用户名，密码，库名
db = pymysql.connect('localhost','pydb','123456','pytest')

# 使用 cursor() 方法创建一个游标对象 cursor
cursor = db.cursor()

# 创建数据库表 
# 使用 execute()方法执行 SQL
cursor.execute('DROP TABLE IF EXISTS USER')

sql = """CREATE TABLE USERS(
            IDCARD VARCHAR(20) NOT NULL,
            NAME VARCHAR(20),
            SEX CHAR(1),
            JOB VARCHAR(20)
        )"""

cursor.execute(sql)
db.close()

# 插入数据
# sql2 = "INSERT INTO USERS VALUES('{}','{}','{}','{}')".format("510154199508187654","lisa","1","saler")
# try:
#   # 执行
#   cursor.execute(sql2)
#   # 提交到数据库执行
#   db.commit()
# except Exception as e:
#   # 回滚
#   print(e)
#   db.rollback()
# finally:
#   db.close()
#   cursor.close()

# 数据库查询操作
# 使用 fetchone() 方法获取单条数据, 使用fetchall() 方法获取多条数据

# 查询sql
# sql3 = "select * from users where job = '{}'".format('student')

# try:
#   cursor.execute(sql3)
# except Exception as e:
#   print('error',e)
# else:
#   results = cursor.fetchall()
#   for row in results:
#       idcard = row[0]
#       name = row[1]
#       sex = '男孩' if row[2] == '1' else '女孩'
#       job = row[3]
#       print("{}的工作是{},身份证号是{},是个{}".format(name, job, idcard, sex))
# finally:
#   db.close()
#   cursor.close()

# 更改操作
# sql4 = "update  users set job = '{}' where name = '{}'".format('teacher', 'Tom')
# try:
#   # 执行
#   cursor.execute(sql4)
#   # 提交到数据库执行
#   db.commit()
# except Exception as e:
#   # 回滚
#   print(e)
#   db.rollback()
# finally:
#   db.close()
#   cursor.close()

# 删除操作
# sql4 = "delete from users  where name = '{}'".format('lisa')
# try:
#   # 执行
#   cursor.execute(sql4)
#   # 提交到数据库执行
#   db.commit()
# except Exception as e:
#   # 回滚
#   print(e)
#   db.rollback()
# finally:
#   db.close()
#   cursor.close()
```
